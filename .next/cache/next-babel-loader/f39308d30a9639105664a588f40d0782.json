{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useReducer } from 'react';\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1;\n\n    case 'minus':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction MyCountFun() {\n  // const [count,setCount]=useState(0)\n  const {\n    0: count,\n    1: dispatchCount\n  } = useReducer(countReducer, 0);\n  const {\n    0: name,\n    1: setName\n  } = useState('majy'); // useEffect(()=>{\n  // \tlet interval = setInterval(()=>{\n  // \t\tdispatchCount({type:'minus'})\n  // \t\t// setCount(count=>count+1)\n  // \t},1000)\n  // \treturn ()=>clearInterval(interval)\n  // },[])\n\n  useEffect(() => {\n    console.log(\"useEffect init\");\n    return () => {\n      console.log(\"useEffect detach\");\n    };\n  });\n  return __jsx(\"div\", null, __jsx(\"input\", {\n    value: name,\n    onChange: e => setName(e.target.value)\n  }), __jsx(\"button\", {\n    onClick: () => dispatchCount({\n      type: 'add'\n    })\n  }, count));\n}\n\nexport default MyCountFun;","map":{"version":3,"sources":["/Users/majy/study/next-app/pages/hook.js"],"names":["React","useState","useEffect","useReducer","countReducer","state","action","type","MyCountFun","count","dispatchCount","name","setName","console","log","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAoD,OAApD;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA4BC,MAA5B,EAAmC;AAClC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,KAAL;AACI,aAAOF,KAAK,GAAC,CAAb;;AACJ,SAAK,OAAL;AACC,aAAOA,KAAK,GAAC,CAAb;;AACD;AACC,aAAOA,KAAP;AANF;AAQA;;AAED,SAASG,UAAT,GAAqB;AACpB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAuBP,UAAU,CAACC,YAAD,EAAc,CAAd,CAAvC;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAMC;AAAN,MAAeX,QAAQ,CAAC,MAAD,CAA7B,CAHoB,CAIpB;AACA;AACA;AACA;AACA;AAEA;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAI;AACbW,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACA,WAAO,MAAI;AACVD,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,KAFD;AAGA,GALQ,CAAT;AAMA,SACC,mBACC;AAAO,IAAA,KAAK,EAAEH,IAAd;AAAoB,IAAA,QAAQ,EAAEI,CAAC,IAAEH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;AAAxC,IADD,EAEC;AAAQ,IAAA,OAAO,EAAE,MAAIP,aAAa,CAAC;AAACH,MAAAA,IAAI,EAAC;AAAN,KAAD;AAAlC,KAAmDE,KAAnD,CAFD,CADD;AAMA;;AAED,eAAeD,UAAf","sourcesContent":["import React,{useState, useEffect, useReducer} from 'react'\n\n\nfunction countReducer(state,action){\n\tswitch(action.type){\n\t\tcase 'add':\n\t\t    return state+1\n\t\tcase 'minus':\n\t\t\treturn state-1\n\t\tdefault:\n\t\t\treturn state    \n\t}\n}\n\nfunction MyCountFun(){\n\t// const [count,setCount]=useState(0)\n\tconst [count, dispatchCount]=useReducer(countReducer,0)\n\tconst [name,setName]=useState('majy')\n\t// useEffect(()=>{\n\t// \tlet interval = setInterval(()=>{\n\t// \t\tdispatchCount({type:'minus'})\n\t// \t\t// setCount(count=>count+1)\n\t// \t},1000)\n\n\t// \treturn ()=>clearInterval(interval)\n\t// },[])\n\tuseEffect(()=>{\n\t\tconsole.log(\"useEffect init\")\n\t\treturn ()=>{\n\t\t\tconsole.log(\"useEffect detach\")\n\t\t}\n\t})\n\treturn (\n\t\t<div>\n\t\t\t<input value={name} onChange={e=>setName(e.target.value)}/>\n\t\t\t<button onClick={()=>dispatchCount({type:'add'})}>{count}</button>\n\t\t</div>\n\t)\n}\n\nexport default MyCountFun"]},"metadata":{},"sourceType":"module"}