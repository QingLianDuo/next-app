{"ast":null,"code":"import { createStore } from 'redux';\nvar initialState = {\n  count: 0\n};\nvar ADD = 'add'; // 纯函数，没有副作用\n// 有任何更新都要返回新的对象\n\nfunction reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD:\n      return {\n        count: state.count + 1\n      };\n\n    default:\n      return state;\n  }\n}\n\nvar store = createStore(reducer, initialState);\nconsole.log(store);\nstore.subscribe(function () {\n  console.log('changed', store.getState());\n});\nstore.dispatch({\n  type: 'add'\n});\nstore.dispatch({\n  type: 'add'\n});\nexport default store;","map":{"version":3,"sources":["/Users/majy/study/next-app/store/store.js"],"names":["createStore","initialState","count","ADD","reducer","state","action","console","log","type","store","subscribe","getState","dispatch"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAGA,IAAMC,GAAG,GAAG,KAAZ,C,CACA;AACA;;AACA,SAASC,OAAT,GAA2C;AAAA,MAA1BC,KAA0B,uEAApBJ,YAAoB;AAAA,MAAPK,MAAO;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBC,MAAlB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACC,SAAKN,GAAL;AACC,aAAO;AAACD,QAAAA,KAAK,EAACG,KAAK,CAACH,KAAN,GAAY;AAAnB,OAAP;;AACD;AACC,aAAOG,KAAP;AAJF;AAMA;;AACD,IAAMK,KAAK,GAAGV,WAAW,CAACI,OAAD,EAASH,YAAT,CAAzB;AAEAM,OAAO,CAACC,GAAR,CAAYE,KAAZ;AAEAA,KAAK,CAACC,SAAN,CAAgB,YAAI;AACnBJ,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBE,KAAK,CAACE,QAAN,EAAtB;AACA,CAFD;AAIAF,KAAK,CAACG,QAAN,CAAe;AAACJ,EAAAA,IAAI,EAAC;AAAN,CAAf;AACAC,KAAK,CAACG,QAAN,CAAe;AAACJ,EAAAA,IAAI,EAAC;AAAN,CAAf;AAEA,eAAeC,KAAf","sourcesContent":["import {createStore} from 'redux'\n\nconst initialState = {\n\tcount: 0\n}\nconst ADD = 'add'\n// 纯函数，没有副作用\n// 有任何更新都要返回新的对象\nfunction reducer(state=initialState,action){\n\tconsole.log(state,action)\n\tswitch(action.type){\n\t\tcase ADD:\n\t\t\treturn {count:state.count+1}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nconst store = createStore(reducer,initialState)\n\nconsole.log(store)\n\nstore.subscribe(()=>{\n\tconsole.log('changed',store.getState())\n})\n\nstore.dispatch({type:'add'})\nstore.dispatch({type:'add'})\n\nexport default store"]},"metadata":{},"sourceType":"module"}