{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState, useEffect, useReducer } from 'react';\n\nfunction countReducer(state, action) {\n  switch (action.type) {\n    case 'add':\n      return state + 1;\n\n    case 'minus':\n      return state - 1;\n\n    default:\n      return state;\n  }\n}\n\nfunction MyCountFun() {\n  // const [count,setCount]=useState(0)\n  const {\n    0: count,\n    1: dispatchCount\n  } = useReducer(countReducer, 0);\n  useEffect(() => {\n    let interval = setInterval(() => {\n      dispatchCount({\n        type: 'minus'\n      }); // setCount(count=>count+1)\n    }, 1000);\n    return () => clearInterval(interval);\n  }, []);\n  return __jsx(\"span\", null, count);\n}\n\nexport default MyCountFun;","map":{"version":3,"sources":["/Users/majy/study/next-app/pages/hook.js"],"names":["React","useState","useEffect","useReducer","countReducer","state","action","type","MyCountFun","count","dispatchCount","interval","setInterval","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAoD,OAApD;;AAGA,SAASC,YAAT,CAAsBC,KAAtB,EAA4BC,MAA5B,EAAmC;AAClC,UAAOA,MAAM,CAACC,IAAd;AACC,SAAK,KAAL;AACI,aAAOF,KAAK,GAAC,CAAb;;AACJ,SAAK,OAAL;AACC,aAAOA,KAAK,GAAC,CAAb;;AACD;AACC,aAAOA,KAAP;AANF;AAQA;;AAED,SAASG,UAAT,GAAqB;AACpB;AACA,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAuBP,UAAU,CAACC,YAAD,EAAc,CAAd,CAAvC;AACAF,EAAAA,SAAS,CAAC,MAAI;AACb,QAAIS,QAAQ,GAAGC,WAAW,CAAC,MAAI;AAC9BF,MAAAA,aAAa,CAAC;AAACH,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAb,CAD8B,CAE9B;AACA,KAHyB,EAGxB,IAHwB,CAA1B;AAKA,WAAO,MAAIM,aAAa,CAACF,QAAD,CAAxB;AACA,GAPQ,EAOP,EAPO,CAAT;AAQA,SAAO,oBAAOF,KAAP,CAAP;AACA;;AAED,eAAeD,UAAf","sourcesContent":["import React,{useState, useEffect, useReducer} from 'react'\n\n\nfunction countReducer(state,action){\n\tswitch(action.type){\n\t\tcase 'add':\n\t\t    return state+1\n\t\tcase 'minus':\n\t\t\treturn state-1\n\t\tdefault:\n\t\t\treturn state    \n\t}\n}\n\nfunction MyCountFun(){\n\t// const [count,setCount]=useState(0)\n\tconst [count, dispatchCount]=useReducer(countReducer,0)\n\tuseEffect(()=>{\n\t\tlet interval = setInterval(()=>{\n\t\t\tdispatchCount({type:'minus'})\n\t\t\t// setCount(count=>count+1)\n\t\t},1000)\n\n\t\treturn ()=>clearInterval(interval)\n\t},[])\n\treturn <span>{count}</span>\n}\n\nexport default MyCountFun"]},"metadata":{},"sourceType":"module"}