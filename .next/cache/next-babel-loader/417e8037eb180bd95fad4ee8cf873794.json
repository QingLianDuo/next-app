{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers } from 'redux';\nvar initialState = {\n  count: 0\n};\nvar userInitialState = {\n  username: 'majy',\n  age: 30\n};\nvar ADD = 'add'; // 纯函数，没有副作用\n// 有任何更新都要返回新的对象\n// 可以通过 combineReducers合并\n\nfunction countReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        count: state.count + 1\n      });\n\n    default:\n      return state;\n  }\n}\n\nfunction userReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : userInitialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(state, action);\n\n  switch (action.type) {\n    case ADD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        username: state.username + 1\n      });\n\n    default:\n      return state;\n  }\n}\n\nvar reducer = combineReducers({\n  counter: countReducer,\n  user: userReducer\n});\nvar store = createStore(reducer, {\n  counter: initialState,\n  user: userInitialState\n});\nconsole.log(store);\nstore.subscribe(function () {\n  console.log('changed', store.getState());\n});\nstore.dispatch({\n  type: 'add'\n});\nstore.dispatch({\n  type: 'add'\n});\nexport default store;","map":{"version":3,"sources":["/Users/majy/study/next-app/store/store.js"],"names":["createStore","combineReducers","initialState","count","userInitialState","username","age","ADD","countReducer","state","action","console","log","type","userReducer","reducer","counter","user","store","subscribe","getState","dispatch"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AAEA,IAAMC,YAAY,GAAG;AACpBC,EAAAA,KAAK,EAAE;AADa,CAArB;AAGA,IAAMC,gBAAgB,GAAG;AACxBC,EAAAA,QAAQ,EAAC,MADe;AAExBC,EAAAA,GAAG,EAAE;AAFmB,CAAzB;AAIA,IAAMC,GAAG,GAAG,KAAZ,C,CACA;AACA;AACA;;AACA,SAASC,YAAT,GAAgD;AAAA,MAA1BC,KAA0B,uEAApBP,YAAoB;AAAA,MAAPQ,MAAO;AAC/CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBC,MAAlB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACC,SAAKN,GAAL;AACC,6CAAWE,KAAX;AAAkBN,QAAAA,KAAK,EAACM,KAAK,CAACN,KAAN,GAAY;AAApC;;AACD;AACC,aAAOM,KAAP;AAJF;AAMA;;AACD,SAASK,WAAT,GAAmD;AAAA,MAA9BL,KAA8B,uEAAxBL,gBAAwB;AAAA,MAAPM,MAAO;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAkBC,MAAlB;;AACA,UAAOA,MAAM,CAACG,IAAd;AACC,SAAKN,GAAL;AACC,6CAAWE,KAAX;AAAkBJ,QAAAA,QAAQ,EAACI,KAAK,CAACJ,QAAN,GAAe;AAA1C;;AACD;AACC,aAAOI,KAAP;AAJF;AAMA;;AAED,IAAMM,OAAO,GAAGd,eAAe,CAAC;AAC/Be,EAAAA,OAAO,EAAER,YADsB;AAE/BS,EAAAA,IAAI,EAAEH;AAFyB,CAAD,CAA/B;AAKA,IAAMI,KAAK,GAAGlB,WAAW,CAACe,OAAD,EAAS;AACjCC,EAAAA,OAAO,EAAEd,YADwB;AAEjCe,EAAAA,IAAI,EAAEb;AAF2B,CAAT,CAAzB;AAKAO,OAAO,CAACC,GAAR,CAAYM,KAAZ;AAEAA,KAAK,CAACC,SAAN,CAAgB,YAAI;AACnBR,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBM,KAAK,CAACE,QAAN,EAAtB;AACA,CAFD;AAIAF,KAAK,CAACG,QAAN,CAAe;AAACR,EAAAA,IAAI,EAAC;AAAN,CAAf;AACAK,KAAK,CAACG,QAAN,CAAe;AAACR,EAAAA,IAAI,EAAC;AAAN,CAAf;AAEA,eAAeK,KAAf","sourcesContent":["import {createStore,combineReducers} from 'redux'\n\nconst initialState = {\n\tcount: 0\n}\nconst userInitialState = {\n\tusername:'majy',\n\tage: 30\n}\nconst ADD = 'add'\n// 纯函数，没有副作用\n// 有任何更新都要返回新的对象\n// 可以通过 combineReducers合并\nfunction countReducer(state=initialState,action){\n\tconsole.log(state,action)\n\tswitch(action.type){\n\t\tcase ADD:\n\t\t\treturn {...state, count:state.count+1}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\nfunction userReducer(state=userInitialState,action){\n\tconsole.log(state,action)\n\tswitch(action.type){\n\t\tcase ADD:\n\t\t\treturn {...state, username:state.username+1}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nconst reducer = combineReducers({\n\tcounter: countReducer,\n\tuser: userReducer\n})\n\nconst store = createStore(reducer,{\n\tcounter: initialState,\n\tuser: userInitialState\n})\n\nconsole.log(store)\n\nstore.subscribe(()=>{\n\tconsole.log('changed',store.getState())\n})\n\nstore.dispatch({type:'add'})\nstore.dispatch({type:'add'})\n\nexport default store"]},"metadata":{},"sourceType":"module"}