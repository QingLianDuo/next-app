{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// _document is only rendered on the server side and not on the client side\n// Event handlers like onClick can't be added to this file\n// ./pages/_document.js\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheet } from \"styled-components\";\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n    const sheet = new ServerStyleSheet();\n    const originalRenderPage = ctx.renderPage;\n\n    try {\n      ctx.renderPage = () => originalRenderPage({\n        enhanceApp: App => props => sheet.collectStyles(__jsx(App, props)),\n        // _app.js导出的App\n        enhanceComponent: Component => Component // page 下的页面\n\n      });\n\n      const initialProps = await Document.getInitialProps(ctx);\n      return _objectSpread(_objectSpread({}, initialProps), {}, {\n        styles: __jsx(React.Fragment, null, props.styles, sheet.getStyleElement())\n      });\n    } finally {\n      sheet.seal();\n    }\n  }\n\n  render() {\n    return __jsx(\"html\", null, __jsx(Head, null, __jsx(\"style\", null, `body { margin: 0 } .custom_class{font-size:18px;} /* custom! */`)), __jsx(\"body\", {\n      className: \"custom_class\"\n    }, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n}","map":{"version":3,"sources":["/Users/majy/study/next-app/pages/_document.js"],"names":["Document","Head","Main","NextScript","ServerStyleSheet","MyDocument","getInitialProps","ctx","sheet","originalRenderPage","renderPage","enhanceApp","App","props","collectStyles","enhanceComponent","Component","initialProps","styles","getStyleElement","seal","render"],"mappings":";;;;;;;;;AAAA;AACA;AAEA;AACA,OAAOA,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,gBAAT,QAAgC,mBAAhC;AAEA,eAAe,MAAMC,UAAN,SAAyBL,QAAzB,CAAkC;AAC/C,eAAaM,eAAb,CAA6BC,GAA7B,EAAkC;AACjC,UAAMC,KAAK,GAAG,IAAIJ,gBAAJ,EAAd;AACA,UAAMK,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AACA,QAAG;AACFH,MAAAA,GAAG,CAACG,UAAJ,GAAiB,MAAMD,kBAAkB,CAAC;AACzCE,QAAAA,UAAU,EAAEC,GAAG,IAAKC,KAAD,IAASL,KAAK,CAACM,aAAN,CAAoB,MAAC,GAAD,EAASD,KAAT,CAApB,CADa;AAC0B;AACnEE,QAAAA,gBAAgB,EAAEC,SAAS,IAAIA,SAFU,CAEA;;AAFA,OAAD,CAAzC;;AAIA,YAAMC,YAAY,GAAG,MAAMjB,QAAQ,CAACM,eAAT,CAAyBC,GAAzB,CAA3B;AACC,6CAAYU,YAAZ;AAA0BC,QAAAA,MAAM,EAAC,4BAAGL,KAAK,CAACK,MAAT,EAAiBV,KAAK,CAACW,eAAN,EAAjB;AAAjC;AACD,KAPD,SAOQ;AACPX,MAAAA,KAAK,CAACY,IAAN;AACA;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,oBACE,MAAC,IAAD,QACE,qBAAS,iEAAT,CADF,CADF,EAIE;AAAM,MAAA,SAAS,EAAC;AAAhB,OACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CAJF,CADF;AAWD;;AA5B8C","sourcesContent":["// _document is only rendered on the server side and not on the client side\n// Event handlers like onClick can't be added to this file\n\n// ./pages/_document.js\nimport Document, { Head, Main, NextScript } from 'next/document'\nimport { ServerStyleSheet} from \"styled-components\"\n\nexport default class MyDocument extends Document {\n  static async getInitialProps(ctx) {\n  \tconst sheet = new ServerStyleSheet()\n  \tconst originalRenderPage = ctx.renderPage\n  \ttry{\n  \t\tctx.renderPage = () => originalRenderPage({\n\t  \t\tenhanceApp: App => (props)=>sheet.collectStyles(<App {...props}/>),// _app.js导出的App\n\t  \t\tenhanceComponent: Component => Component,// page 下的页面\n  \t    })\n  \t\tconst initialProps = await Document.getInitialProps(ctx)\n    \treturn { ...initialProps, styles:<>{props.styles}{sheet.getStyleElement()}</> }\n  \t}finally{\n  \t\tsheet.seal()\n  \t}\n  }\n\n  render() {\n    return (\n      <html>\n        <Head>\n          <style>{`body { margin: 0 } .custom_class{font-size:18px;} /* custom! */`}</style>\n        </Head>\n        <body className=\"custom_class\">\n          <Main />\n          <NextScript />\n        </body>\n      </html>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}