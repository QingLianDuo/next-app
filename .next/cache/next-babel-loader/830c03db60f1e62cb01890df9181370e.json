{"ast":null,"code":"import \"antd/lib/button/style\";\nimport _Button from \"antd/lib/button\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport '../public/index.less';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport store from '../store/store';\nimport { connect } from 'react-redux';\nconst events = ['routeChangeStart', 'routeChangeCompolete', 'routeChangeError', 'beforeHistoryChange', 'hashChangeStart', 'hashCHangeCompolete'];\n\nfunction makeEvent(type) {\n  return (...args) => {\n    console.log(type, ...args);\n  };\n}\n\nevents.forEach(event => {\n  Router.events.on(event, makeEvent(event));\n});\n\nfunction gotoPage() {\n  Router.push({\n    pathname: '/other',\n    query: {\n      id: 1\n    }\n  });\n}\n\nconst Index = props => {\n  const {\n    counter,\n    username,\n    stars,\n    add,\n    updateUserName\n  } = props;\n  return __jsx(\"div\", null, \"Next stars: \", stars, __jsx(Link, {\n    href: \"/other?id=2\",\n    as: \"/other/2\"\n  }, __jsx(_Button, {\n    type: \"primary\"\n  }, \"Primary\")), __jsx(_Button, {\n    onClick: gotoPage\n  }, \"Default\"), __jsx(_Button, {\n    type: \"dashed\"\n  }, \"Dashed\"), __jsx(_Button, {\n    type: \"link\",\n    onClick: () => add(2)\n  }, \"change username\"), __jsx(\"input\", {\n    type: \"text\",\n    onChange: e => updateUserName(e.target.value)\n  }), __jsx(\"div\", null, \"count:\", counter, \",username:\", username));\n};\n\nIndex.getInitialProps = async ({\n  req\n}) => {\n  // const res = await fetch('https://api.github.com/repos/zeit/next.js')\n  // const json = await res.json()\n  // return { stars: json.stargazers_count }\n  return {\n    stars: 200\n  };\n};\n\nexport default connect(function mapStateToProps(state) {\n  return {\n    counter: state.counter.count,\n    username: state.user.username\n  };\n}, function mapDispatchToProps(dispatch) {\n  return {\n    add: num => dispatch({\n      type: 'add',\n      num: num\n    }),\n    updateUserName: name => dispatch({\n      type: \"UPDATE_USER\",\n      user: name\n    })\n  };\n})(Index);","map":{"version":3,"sources":["/Users/majy/study/next-app/pages/index.js"],"names":["Link","Router","store","connect","events","makeEvent","type","args","console","log","forEach","event","on","gotoPage","push","pathname","query","id","Index","props","counter","username","stars","add","updateUserName","e","target","value","getInitialProps","req","mapStateToProps","state","count","user","mapDispatchToProps","dispatch","num","name"],"mappings":";;;;AACA,OAAO,sBAAP;AAEA,OAAOA,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,OAAOC,KAAP,MAAkB,gBAAlB;AAEA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,MAAMC,MAAM,GAAG,CACd,kBADc,EAEd,sBAFc,EAGd,kBAHc,EAId,qBAJc,EAKd,iBALc,EAMd,qBANc,CAAf;;AASA,SAASC,SAAT,CAAmBC,IAAnB,EAAwB;AACvB,SAAO,CAAC,GAAGC,IAAJ,KAAW;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAiB,GAAGC,IAApB;AACA,GAFD;AAGA;;AACDH,MAAM,CAACM,OAAP,CAAgBC,KAAD,IAAS;AACvBV,EAAAA,MAAM,CAACG,MAAP,CAAcQ,EAAd,CAAiBD,KAAjB,EAAuBN,SAAS,CAACM,KAAD,CAAhC;AACA,CAFD;;AAIA,SAASE,QAAT,GAAmB;AAClBZ,EAAAA,MAAM,CAACa,IAAP,CAAY;AACXC,IAAAA,QAAQ,EAAC,QADE;AAEXC,IAAAA,KAAK,EAAC;AACLC,MAAAA,EAAE,EAAC;AADE;AAFK,GAAZ;AAMA;;AAED,MAAMC,KAAK,GAAIC,KAAD,IAAU;AACvB,QAAM;AAACC,IAAAA,OAAD;AAASC,IAAAA,QAAT;AAAkBC,IAAAA,KAAlB;AAAwBC,IAAAA,GAAxB;AAA4BC,IAAAA;AAA5B,MAA4CL,KAAlD;AACA,SACC,mCACcG,KADd,EAEC,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,aAAX;AAAyB,IAAA,EAAE,EAAC;AAA5B,KACC;AAAQ,IAAA,IAAI,EAAC;AAAb,eADD,CAFD,EAKI;AAAQ,IAAA,OAAO,EAAET;AAAjB,eALJ,EAMI;AAAQ,IAAA,IAAI,EAAC;AAAb,cANJ,EAOI;AAAQ,IAAA,IAAI,EAAC,MAAb;AAAoB,IAAA,OAAO,EAAE,MAAIU,GAAG,CAAC,CAAD;AAApC,uBAPJ,EAQI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,QAAQ,EAAGE,CAAD,IAAKD,cAAc,CAACC,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhD,IARJ,EASI,6BACKP,OADL,gBACwBC,QADxB,CATJ,CADD;AAeA,CAjBD;;AAqBAH,KAAK,CAACU,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AACzC;AACA;AACA;AACA,SAAO;AAAEP,IAAAA,KAAK,EAAE;AAAT,GAAP;AACD,CALD;;AAOA,eAAenB,OAAO,CAAC,SAAS2B,eAAT,CAAyBC,KAAzB,EAA+B;AACrD,SAAO;AACNX,IAAAA,OAAO,EAAEW,KAAK,CAACX,OAAN,CAAcY,KADjB;AAENX,IAAAA,QAAQ,EAACU,KAAK,CAACE,IAAN,CAAWZ;AAFd,GAAP;AAIA,CALqB,EAKpB,SAASa,kBAAT,CAA4BC,QAA5B,EAAqC;AACtC,SAAO;AACNZ,IAAAA,GAAG,EAAEa,GAAD,IAASD,QAAQ,CAAC;AAAC7B,MAAAA,IAAI,EAAC,KAAN;AAAY8B,MAAAA,GAAG,EAACA;AAAhB,KAAD,CADf;AAENZ,IAAAA,cAAc,EAAEa,IAAD,IAAQF,QAAQ,CAAC;AAAC7B,MAAAA,IAAI,EAAC,aAAN;AAAoB2B,MAAAA,IAAI,EAACI;AAAzB,KAAD;AAFzB,GAAP;AAIA,CAVqB,CAAP,CAUZnB,KAVY,CAAf","sourcesContent":["\nimport '../public/index.less'\nimport { Button } from 'antd'\nimport Link from 'next/link'\nimport Router from 'next/router'\n\nimport store from '../store/store'\n\nimport {connect} from 'react-redux'\n\n\nconst events = [\n\t'routeChangeStart',\n\t'routeChangeCompolete',\n\t'routeChangeError',\n\t'beforeHistoryChange',\n\t'hashChangeStart',\n\t'hashCHangeCompolete'\n]\n\nfunction makeEvent(type){\n return (...args)=>{\n \tconsole.log(type,...args)\n }\n}\nevents.forEach((event)=>{\n\tRouter.events.on(event,makeEvent(event))\n})\n\nfunction gotoPage(){\n\tRouter.push({\n\t\tpathname:'/other',\n\t\tquery:{\n\t\t\tid:1\n\t\t}\n\t})\n}\n\nconst Index = (props) =>{\n\tconst {counter,username,stars,add,updateUserName}=props\n\treturn (\n\t\t<div>\n\t\t\tNext stars: {stars}\n\t\t\t<Link href=\"/other?id=2\" as=\"/other/2\">\n\t\t\t\t<Button type=\"primary\">Primary</Button>\n\t\t\t</Link>\n\t\t    <Button onClick={gotoPage}>Default</Button>\n\t\t    <Button type=\"dashed\">Dashed</Button>\n\t\t    <Button type=\"link\" onClick={()=>add(2)}>change username</Button>\n\t\t    <input type=\"text\" onChange={(e)=>updateUserName(e.target.value)}/>\n\t\t    <div>\n\t\t\t\tcount:{counter},username:{username}\n\t\t    </div>\n\t\t</div>\n\t)\n}\n\n  \n\nIndex.getInitialProps = async ({ req }) => {\n  // const res = await fetch('https://api.github.com/repos/zeit/next.js')\n  // const json = await res.json()\n  // return { stars: json.stargazers_count }\n  return { stars: 200 }\n}\n\nexport default connect(function mapStateToProps(state){\n\treturn {\n\t\tcounter: state.counter.count,\n\t\tusername:state.user.username\n\t}\n},function mapDispatchToProps(dispatch){\n\treturn {\n\t\tadd:(num) => dispatch({type:'add',num:num}),\n\t\tupdateUserName:(name)=>dispatch({type:\"UPDATE_USER\",user:name})\n\t}\n})(Index)"]},"metadata":{},"sourceType":"module"}